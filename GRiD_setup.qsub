#!/bin/bash
 				
#PBS -l walltime=1:00:00 
module load R/3.2.3
export R_LIBS=/data/emiola/R_packages/

module load gcc/7.1.0
module load samtools
module load bedtools
module load bowtie2
module load seqtk

GRID_DIR="/path/to/GRiD files" #GRiD scripts directory
READS_DIR="/path/to/reads" #Fastq reads directory
BOWTIE_INDEX="/path/to/bowtie index" #path to bowtie index of genome 
OUTPUT_DIR="/path/to/output/directory" #output directory

cd $READS_DIR
ls *_1.fastq | rev | cut -d'_' -f2- | rev > reads.txt # Assumes reads are paired-end ending with "_1.fastq and _2.fastq, respectively"

for i in `cat reads.txt`
do
bowtie2 -x $BOWTIE_INDEX -1 $i\_1.fastq -2 $i\_2.fastq --very-sensitive -S $OUTPUT_DIR/$i.main.sam --al-conc $OUTPUT_DIR/$i.MAP.mate.fastq

cd $OUTPUT_DIR
# subsample 85% of mapped reads twice 
seqtk sample -s100 $i.MAP.mate.1.fastq 0.85 > $i.MAP.mate.subsample.1.fastq 
seqtk sample -s100 $i.MAP.mate.2.fastq 0.85 > $i.MAP.mate.subsample.2.fastq
bowtie2 -x $BOWTIE_INDEX -1 $i.MAP.mate.subsample.1.fastq -2 $i.MAP.mate.subsample.2.fastq --very-sensitive -S $i.sub1.sam

seqtk sample -s90 $i.MAP.mate.1.fastq 0.85 > $i.MAP.mate.subsample2.1.fastq
seqtk sample -s90 $i.MAP.mate.2.fastq 0.85 > $i.MAP.mate.subsample2.2.fastq
bowtie2 -x $BOWTIE_INDEX -1 $i.MAP.mate.subsample2.1.fastq -2 $i.MAP.mate.subsample2.2.fastq --very-sensitive -S $i.sub2.sam

rm $i.MAP.mate.subsample*

###########################################
for FILE in $i.*.sam
do
samtools view -bS $FILE > $FILE.bam
rm $FILE
samtools view -H $FILE.bam | perl -ne 'if ($_ =~ m/^\@SQ/) { print $_ }' | perl -ne 'if ($_ =~ m/SN:(.+)\s+LN:(\d+)/) { print $1, "\t", $2, "\n"}' > lengths.genome

samtools view -b -F 4 $FILE.bam | samtools sort -o $FILE.sorted.bam
rm $FILE.bam
genomeCoverageBed -ibam $FILE.sorted.bam -g lengths.genome -d >$FILE.txt
rm $FILE.sorted.bam

awk -F"\t" '{obj1[$1]+=$3;++obj2[$1]}END{for (key in obj1) print key"\011"obj1[key]/obj2[key]}' $FILE.txt | sort -nr -k2,2 > $FILE.filtered_scaffold_coverage.txt

#split contigs to two twmporary files
sed -n 2~2p $FILE.filtered_scaffold_coverage.txt | sort -n -k2,2 > $FILE.evenfile.txt #important to re-sort one of either files
sed -n 1~2p $FILE.filtered_scaffold_coverage.txt > $FILE.oddfile.txt

#merge both files to obtain re-organized scaffolds order
cat $FILE.oddfile.txt $FILE.evenfile.txt | cut -f1 > $FILE.organized_scaffold.txt

# obtain the coverage file with reorganized scaffold
for var in `cat $FILE.organized_scaffold.txt`
do
grep "$var" $FILE.txt >> $FILE.reorganized.txt
done
rm $FILE.organized_scaffold.txt
rm $FILE.oddfile.txt
rm $FILE.evenfile.txt
rm $FILE.filtered_scaffold_coverage.txt
rm $FILE.txt
done

Rscript $GRID_DIR/GRiD.R -i $i.main.sam.reorganized.txt -x $i.sub1.sam.reorganized.txt -y $i.sub2.sam.reorganized.txt -o $i.pdf -p $i.GRiD.txt

rm $i.sub*
rm $i.*.sam
rm $i.main.sam.reorganized.txt
rm $i.MAP.mate.2.fastq
rm $i.MAP.mate.1.fastq
rm lengths.genome
rm $READS_DIR/reads.txt
done
